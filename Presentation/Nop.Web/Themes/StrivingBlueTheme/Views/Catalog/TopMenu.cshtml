@model TopMenuModel
@using Nop.Web.Models.Catalog;

    @helper RenderCategoryLine(CategorySimpleModel category, int level, bool responsiveMobileMenu)
    {
    <li class="dropdown siteDropdown open">

        <a class="filterLink filterLink1 dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
            @category.Name
            <i class="material-icons arrowDown">keyboard_arrow_down</i><i class="material-icons arrowUp" style="display:none;">keyboard_arrow_up</i>
        </a>

        @*<a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">
        @category.Name
    @if (category.NumberOfProducts.HasValue)
    {
        <text> </text>@T("Categories.TotalProducts", category.NumberOfProducts.Value)
    }<ul class="sublist first-level">
    </a>*@
    @{
        //subcategories
        var subCategories = responsiveMobileMenu ?
            //responsive (all categories)
            category.SubCategories :
            //standard design (only categories with "IncludeInTopMenu")
            category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

        var levelClass = "";
        if (level == 0)
        {
            levelClass = "first-level";
        }
        if (subCategories.Count > 0)
        {
    <ul class="dropdown-menu siteDropdownMenu @levelClass" role="menu">
        
            
                    <ul>
                        @foreach (var subCategory in subCategories)
                        {
                            @RenderCategorySubMenu(subCategory, level + 1, responsiveMobileMenu)
                        }
                    </ul>
            
    </ul>
        }
}
</li>
}

@helper RenderCategorySubMenu(CategorySimpleModel category, int level, bool responsiveMobileMenu)
{
    <li>

        <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">
            @category.Name
        </a>

        @*<a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">
                @category.Name
            @if (category.NumberOfProducts.HasValue)
            {
                <text> </text>@T("Categories.TotalProducts", category.NumberOfProducts.Value)
            }<ul class="sublist first-level">
            </a>*@
        @{
            //subcategories
            var subCategories = responsiveMobileMenu ?
                //responsive (all categories)
                category.SubCategories :
                //standard design (only categories with "IncludeInTopMenu")
                category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

            var levelClass = "";
            if (level == 0)
            {
                levelClass = "first-level";
            }
            if (subCategories.Count > 0)
            {
                <div class="sublist-toggle"></div>
                <ul class="dropdown-menu siteDropdownMenu" role="menu">
                    @foreach (var subCategory in subCategories)
                    {
                        @RenderCategoryLine(subCategory, level + 1, responsiveMobileMenu)
                    }
                </ul>
            }
        }
    </li>
}

    <ul style="padding:0;">
        @Html.Widget("header_menu_before")
        
        @{
            var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
        }
        @foreach (var category in rootCategories)
        {
            @RenderCategoryLine(category, 0, false)
        }
        
        @Html.Widget("header_menu_after")
    </ul>

    @{
        var rootCategoriesResponsive = Model.Categories.ToList();
        //name it "Categories" if we have only categories. Otherwise, "Menu"
        var responsiveMenuTitle = Model.HasOnlyCategories ? T("Categories") : T("Menu");
        <div class="menu-toggle">@responsiveMenuTitle</div>
        <ul class="top-menu mobile">
            @Html.Widget("mob_header_menu_before")
            
            
            @Html.Widget("mob_header_menu_after")
        </ul>

        <script type="text/javascript">
            $(document).ready(function () {
                $('.menu-toggle').click(function () {
                    $(this).siblings('.top-menu.mobile').slideToggle('slow');
                });
                $('.top-menu.mobile .sublist-toggle').click(function () {
                    $(this).siblings('.sublist').slideToggle('slow');
                });
            });
        </script>
    }